<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:p="http://primefaces.org/ui"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:component="http://xmlns.jcp.org/jsf/composite/components"
	xmlns:composite="http://xmlns.jcp.org/jsf/composite">

	<composite:interface />

    <composite:implementation>
        <!-- OPEN SEADRAGON -->
        <script type="text/javascript" src="#{request.contextPath}/resources/javascript/libs/openseadragon/openseadragon.min.js"></script>
        <script type="text/javascript" src="#{request.contextPath}/resources/javascript/libs/openseadragon/openseadragon-viewerinputhook.js"></script>
        <script type="text/javascript" src="#{request.contextPath}/resources/javascript/dist/viewImage.min.js"></script>
        <!-- 3D -->
                        <script type="text/javascript"
                            src="#{request.contextPath}/resources/javascript/libs/three/three.min.js"></script>
                        <script type="text/javascript"
                            src="#{request.contextPath}/resources/javascript/libs/three/loaders/OBJLoader.js"></script>
                        <script type="text/javascript"
                            src="#{request.contextPath}/resources/javascript/libs/three/loaders/MTLLoader.js"></script>
                        <script type="text/javascript"
                            src="#{request.contextPath}/resources/javascript/libs/three/loaders/PLYLoader.js"></script>
                        <script type="text/javascript"
                            src="#{request.contextPath}/resources/javascript/libs/three/loaders/STLLoader.js"></script>
                        <script type="text/javascript"
                            src="#{request.contextPath}/resources/javascript/libs/three/loaders/FBXLoader.js"></script>
                        <script type="text/javascript"
                            src="#{request.contextPath}/resources/javascript/libs/three/loaders/TDSLoader.js"></script>
                        <script type="text/javascript"
                            src="#{request.contextPath}/resources/javascript/libs/three/loaders/DRACOLoader.js"></script>
                        <script type="text/javascript"
                            src="#{request.contextPath}/resources/javascript/libs/three/loaders/GLTFLoader.js"></script>
                        <script type="text/javascript"
                            src="#{request.contextPath}/resources/javascript/libs/three/controls/OrbitControls.js"></script>
                        <script type="text/javascript"
                            src="#{request.contextPath}/resources/javascript/libs/three/dependencies/inflate.min.js"></script>
                        <script type="text/javascript"
                            src="#{request.contextPath}/resources/javascript/dist/objectView.min.js"></script>

        <div id="readingModeImageWrapper">            
            <div id="readingModeImage">
              <div id="ajaxloader_image">
                 <img src="#{request.contextPath}/resources/images/ajax-loader-large.gif" />
               </div>
            </div>
            
            <script type="text/javascript" rel="nofollow">          
                //<![CDATA[
                var mimeType = "#{activeDocumentBean.viewManager.currentPage.mimeType}";
                var imageMap = $( "#readingModeImage" );
                var access = #{activeDocumentBean.viewManager.currentPage.accessForJs};
                var accessDeniedMessage = $( "<span />" ).addClass( "access-denied" ).text( '#{msg.noImage_accessDenied}' );
                var fileNotFoundMessage = $( "<span />" ).addClass( "file-not-found" ).text( "#{msg.noImage_fileNotFound}" );
                var page = "#{navigationHelper.currentPage}";
                
                if(mimeType == 'image') {
                    var configViewer = {
                        global: {
                            divId: "readingModeImage",
                            zoomSlider: ".zoom-slider",
                            zoomSliderHandle: ".zoom-slider-handle",
    				        footerHeight: #{activeDocumentBean.viewManager.currentPage.getFooterHeight("viewReadingMode")},
                            persistZoom: #{configurationBean.rememberImageZoom},
                            persistRotation: #{configurationBean.rememberImageRotation},
                            persistenceId: "#{activeDocumentBean.topDocumentIddoc}",
                            controls : {
                    		    rotateLeft: '.image-rotate_left',
                    		    rotateRight: '.image-rotate_right',
                    		    reset: '.reset',
                    		}
                        },
                        image: {
                            mimeType: "#{activeDocumentBean.viewManager.currentPage.fullMimeType}",
                            tileSource : '#{activeDocumentBean.viewManager.currentImageInfo}',
                            baseFooterUrl : "#{activeDocumentBean.viewManager.getWatermarkUrl('viewReadingMode')}",
                            highlightCoords: [
                                {
                                    name: "searchHighlighting",
                                    coordinates: #{activeDocumentBean.viewManager.currentSearchResultCoords},
                                    displayTooltip: false
                                }, 
                                {
                                    name: "ugc",
                                    coordinates: [],
                                    displayTooltip: true
                                }, {
            		                name: "annotations",
            		                coordinates: window.location.hash,
            		                displayTooltip: false
            		            }
                            ],
                            tileUrl: null
                        }
                    };
    
                    
                    if ( access ) {
                        var viewImage = new ImageView.Image( configViewer );
                        
                        viewImage.load().then( function( image ) {
                            // TODO: hide loader
                        }).catch( function( error ) {
                            imageMap.html( viewerJS.helper.renderAlert( "alert-danger", "#{msg.noImage_fileNotFound}: " + error, false ) );
                            console.log(error);
                        });
                        
                        // reload image footer in readingmode
                        if ( page === "readingmode" ) {
                        	$( window ).on( "resize", function() {
                        		viewImage.loadFooter();                    		
                        	} );
                        }
                    } else {
                        imageMap.html( accessDeniedMessage );
                    }
                } else if(mimeType == 'object') {
                    $(window).load(function() {
                    imageMap.height($("#contentView").height());
			        var worldConfig = {
				 			controls: {
				 			    xAxis: {
				 			        rotateLeft: '.image-rotate_left',
				 			        rotateRight: '.image-rotate_right'
				 			    },
				 			   yAxis: {
				 			        rotateLeft: '#rotate-left-y',
				 			        rotateRight: '#rotate-right-y'
				 			    },
				 			   zAxis: {
				 			        rotateLeft: '#rotate-left-z',
				 			        rotateRight: '#rotate-right-z'
				 			    },
				 			    position: {
				 			    	reset: '.image-reset'
				 			    },
				 			    zoom: {
				 			        resetZoom: '#reset#zoom'
				 			    }
				 			},
				    		container: {
				    			id: "readingModeImage"
				    		},
					 };
			                
			       	// desktop object view
			       	if ( access ) {
			       	 	$('#ajaxloader_image').show();
				 		var world = WorldGenerator.create(worldConfig);
				 		world.loadObject({
				 	 		 url: "#{activeDocumentBean.viewManager.currentObjectUrl}",
				 			 position: { x:0, y:0, z:-0 },
				 			 rotation:  { x:0, y:0, z:0 },
				 			 size:  10,
				 			 material: {
				 					color: 0x44bb33
				 				},
				 			focus: true,
				 			onTick: function(object, time) {
				 				if(object) {
//				 	 				object.rotation.set(0,  Math.PI/180 * time, 0);
				 				}
				 			}
				 		 }).then(function(object) {
				 	       	 $('#ajaxloader_image').fadeOut(2000);
				 		 	world.render();
				 		 }).catch(function(error) {
				 		    $('#ajaxloader_image').fadeOut(2000);
				 			 console.err("failed to load: ", error);
				 		 })
				 		
			        } else {
			       		imageMap.append( accessDeniedMessage );
			       	}

			       	// mobile object view
			       	if ( $( "#imageContainerMobile" ).is( ":visible" ) ) {
			       		if ( access ) {
			       			$( "#imageContainerMobile" ).append( staticImage );
			       		}
			       		else {
			       			$( "#imageContainerMobile" ).append( accessDeniedMessage );
			       		}
			       	}

			        function freeJSResources(data) {
				        if(!data || data.status == 'begin') {									            
					        if(viewImage) {
					            console.log("closing OpenSeadragon viewer");
					            viewImage.close();
					        }
					        if(world) {
					            console.log("disposing 3d scene");
					            world.dispose();
					        }
				        }
				    }
			    })
			    }
                
                //]]>   
            </script>
        </div>
    </composite:implementation>
</ui:composition>
